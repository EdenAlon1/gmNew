package defpackage;

import java.util.HashMap;
import java.util.Map;
import java.util.regex.Pattern;

/* compiled from: PG */
/* loaded from: classes5.dex */
public final class ertj {
    public static final Pattern a = Pattern.compile("^ +| +$|( )+");
    static final Map b;
    static final Map c;
    static final Map d;

    static {
        HashMap hashMap = new HashMap(20);
        c = hashMap;
        hashMap.put((char) 197, 'A');
        hashMap.put((char) 229, 'a');
        hashMap.put((char) 196, 'A');
        hashMap.put((char) 228, 'a');
        hashMap.put((char) 224, 'a');
        hashMap.put((char) 199, 'C');
        hashMap.put((char) 201, 'E');
        hashMap.put((char) 232, 'e');
        hashMap.put((char) 233, 'e');
        hashMap.put((char) 236, 'i');
        hashMap.put((char) 209, 'N');
        hashMap.put((char) 241, 'n');
        hashMap.put((char) 214, 'O');
        hashMap.put((char) 246, 'o');
        hashMap.put((char) 242, 'o');
        hashMap.put((char) 216, 'O');
        hashMap.put((char) 248, 'o');
        hashMap.put((char) 220, 'U');
        hashMap.put((char) 252, 'u');
        hashMap.put((char) 249, 'u');
        HashMap hashMap2 = new HashMap(110);
        d = hashMap2;
        hashMap2.put((char) 0, ' ');
        hashMap2.put((char) 1, ' ');
        hashMap2.put((char) 2, ' ');
        hashMap2.put((char) 3, ' ');
        hashMap2.put((char) 4, ' ');
        hashMap2.put((char) 5, ' ');
        hashMap2.put((char) 6, ' ');
        hashMap2.put((char) 7, ' ');
        hashMap2.put('\b', ' ');
        hashMap2.put('\t', ' ');
        hashMap2.put('\n', ' ');
        hashMap2.put((char) 11, ' ');
        hashMap2.put('\f', ' ');
        hashMap2.put('\r', ' ');
        hashMap2.put((char) 14, ' ');
        hashMap2.put((char) 15, ' ');
        hashMap2.put((char) 17, ' ');
        hashMap2.put((char) 18, ' ');
        hashMap2.put((char) 19, ' ');
        hashMap2.put((char) 20, ' ');
        hashMap2.put((char) 21, ' ');
        hashMap2.put((char) 22, ' ');
        hashMap2.put((char) 23, ' ');
        hashMap2.put((char) 24, ' ');
        hashMap2.put((char) 25, ' ');
        hashMap2.put((char) 26, ' ');
        hashMap2.put((char) 27, ' ');
        hashMap2.put((char) 28, ' ');
        hashMap2.put((char) 29, ' ');
        hashMap2.put((char) 30, ' ');
        hashMap2.put((char) 31, ' ');
        hashMap2.put((char) 127, ' ');
        hashMap2.put((char) 128, ' ');
        hashMap2.put((char) 129, ' ');
        hashMap2.put((char) 130, ' ');
        hashMap2.put((char) 131, ' ');
        hashMap2.put((char) 132, ' ');
        hashMap2.put((char) 133, ' ');
        hashMap2.put((char) 134, ' ');
        hashMap2.put((char) 135, ' ');
        hashMap2.put((char) 136, ' ');
        hashMap2.put((char) 137, ' ');
        hashMap2.put((char) 138, ' ');
        hashMap2.put((char) 139, ' ');
        hashMap2.put((char) 140, ' ');
        hashMap2.put((char) 141, ' ');
        hashMap2.put((char) 142, ' ');
        hashMap2.put((char) 143, ' ');
        hashMap2.put((char) 144, ' ');
        hashMap2.put((char) 145, ' ');
        hashMap2.put((char) 146, ' ');
        hashMap2.put((char) 147, ' ');
        hashMap2.put((char) 148, ' ');
        hashMap2.put((char) 149, ' ');
        hashMap2.put((char) 150, ' ');
        hashMap2.put((char) 151, ' ');
        hashMap2.put((char) 152, ' ');
        hashMap2.put((char) 153, ' ');
        hashMap2.put((char) 154, ' ');
        hashMap2.put((char) 155, ' ');
        hashMap2.put((char) 156, ' ');
        hashMap2.put((char) 157, ' ');
        hashMap2.put((char) 158, ' ');
        hashMap2.put((char) 159, ' ');
        hashMap2.put((char) 160, ' ');
        hashMap2.put((char) 5760, ' ');
        hashMap2.put((char) 6158, ' ');
        hashMap2.put((char) 8192, ' ');
        hashMap2.put((char) 8193, ' ');
        hashMap2.put((char) 8194, ' ');
        hashMap2.put((char) 8195, ' ');
        hashMap2.put((char) 8196, ' ');
        hashMap2.put((char) 8197, ' ');
        hashMap2.put((char) 8198, ' ');
        hashMap2.put((char) 8199, ' ');
        hashMap2.put((char) 8200, ' ');
        hashMap2.put((char) 8201, ' ');
        hashMap2.put((char) 8202, ' ');
        hashMap2.put((char) 8203, ' ');
        hashMap2.put((char) 8204, ' ');
        hashMap2.put((char) 8205, ' ');
        hashMap2.put((char) 8232, ' ');
        hashMap2.put((char) 8233, ' ');
        hashMap2.put((char) 8239, ' ');
        hashMap2.put((char) 8287, ' ');
        hashMap2.put((char) 8288, ' ');
        hashMap2.put((char) 12288, ' ');
        hashMap2.put((char) 65279, ' ');
        HashMap hashMap3 = new HashMap(erti.a.size() + hashMap.size() + hashMap2.size());
        b = hashMap3;
        hashMap3.putAll(erti.a);
        hashMap3.putAll(hashMap2);
        hashMap3.putAll(hashMap);
    }
}
